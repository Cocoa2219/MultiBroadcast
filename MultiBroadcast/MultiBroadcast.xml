<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MultiBroadcast</name>
    </assembly>
    <members>
        <member name="T:MultiBroadcast.API.MultiBroadcast">
            <summary>
                Class that handles all broadcasts.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.MultiBroadcast.PlayerBroadcasts">
            <summary>
                Dictionary that contains all broadcasts for each player.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.MultiBroadcast.Id">
            <summary>
                Gets the ID of the broadcast that was last added.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.AddMapBroadcast(System.UInt16,System.String,System.Byte,System.String)">
            <summary>
                Adds a broadcast to all players.
            </summary>
            <param name="duration">Broadcast duration.</param>
            <param name="text">Text of the broadcast.</param>
            <param name="priority">Priority of the broadcast.</param>
            <param name="tag">Tag of the broadcast.</param>
            <returns>Broadcasts that were added.</returns>
            <remarks>Duration must be between 1 and 300. (NW Moment)</remarks>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.AddPlayerBroadcast(Exiled.API.Features.Player,System.UInt16,System.String,System.Byte,System.String)">
            <summary>
                Adds a broadcast to a player.
            </summary>
            <param name="player">Player to send the broadcast to.</param>
            <param name="duration">Broadcast duration.</param>
            <param name="text">Text of the broadcast.</param>
            <param name="priority">Priority of the broadcast.</param>
            <param name="tag">Tag of the broadcast.</param>
            <returns>The broadcast that was added.</returns>4
            <remarks>Duration must be between 1 and 300. (NW Moment)</remarks>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,System.Int32[])">
            <summary>
                Edits a broadcast.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="ids">IDs of the broadcasts to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,MultiBroadcast.API.Broadcast[])">
            <summary>
                Edits a broadcast.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="broadcasts">Broadcasts to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,System.String)">
            <summary>
                Edits a broadcast.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="tag">Tag of the broadcast to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,System.UInt16,MultiBroadcast.API.Broadcast[]@,System.Int32[])">
            <summary>
                Edits a broadcast with a new duration.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="duration">New duration for the broadcast.</param>
            <param name="newBroadcasts">New reference of the Broadcast that was edited.</param>
            <param name="ids">IDs of the broadcasts to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,System.UInt16,MultiBroadcast.API.Broadcast[]@,MultiBroadcast.API.Broadcast[])">
            <summary>
                Edits a broadcast with a new duration.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="duration">New duration for the broadcast.</param>
            <param name="newBroadcasts">New reference of the Broadcast that was edited.</param>
            <param name="broadcasts">Broadcasts to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.EditBroadcast(System.String,System.UInt16,MultiBroadcast.API.Broadcast[]@,System.String)">
            <summary>
               Edits a broadcast with a new duration.
            </summary>
            <param name="text">New text for the broadcast.</param>
            <param name="duration">New duration for the broadcast.</param>
            <param name="newBroadcasts">New reference of the Broadcast that was edited.</param>
            <param name="tag">Tag of the broadcast to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.SetPriority(System.Byte,System.Int32[])">
            <summary>
                Sets the priority of a broadcast.
            </summary>
            <param name="priority">Priority to set.</param>
            <param name="ids">Id of broadcasts to set the priority for.</param>
            <returns>True if the broadcasts were priority was successfully set; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.SetPriority(System.Byte,MultiBroadcast.API.Broadcast[])">
            <summary>
                Sets the priority of a broadcast.
            </summary>
            <param name="priority">Priority to set.</param>
            <param name="broadcasts">Broadcasts to set the priority for.</param>
            <returns>True if the broadcasts were priority was successfully set; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.SetTag(System.String,MultiBroadcast.API.Broadcast[])">
            <summary>
                Sets the tag of the broadcast.
            </summary>
            <param name="tag">Tag to set.</param>
            <param name="broadcasts">Broadcasts to set the tag for.</param>
            <returns>True if the broadcasts were tag was successfully set; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.RemoveBroadcast(System.Int32[])">
            <summary>
                Removes a broadcast.
            </summary>
            <param name="ids">IDs of the broadcasts to remove.</param>
            <returns>True if the broadcasts were successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.RemoveBroadcast(MultiBroadcast.API.Broadcast[])">
            <summary>
                Removes a broadcast.
            </summary>
            <param name="broadcasts">Broadcasts to remove.</param>
            <returns>True if the broadcasts were successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.RemoveBroadcast(System.String)">
            <summary>
               Removes a broadcast.
            </summary>
            <param name="tag">Tag of the broadcast to remove.</param>
            <returns>True if the broadcast was successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.GetBroadcast(System.Int32)">
            <summary>
                Gets a broadcast with the specified ID.
            </summary>
            <param name="id">ID of the broadcast.</param>
            <returns>The broadcast with the specified ID.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.GetBroadcast(System.Int32[])">
            <summary>
                Gets broadcasts with the specified IDs.
            </summary>
            <param name="ids">IDs of the broadcasts.</param>
            <returns>The broadcasts with the specified IDs.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.HasBroadcast(System.String)">
            <summary>
                Checks if a broadcast with the specified tag exists.
            </summary>
            <param name="tag">Tag of the broadcast.</param>
            <returns>True if a broadcast with the specified tag exists; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.GetPlayerBroadcasts(Exiled.API.Features.Player)">
            <summary>
                Gets all broadcasts for a player.
            </summary>
            <param name="player">Player to get broadcasts for.</param>
            <returns>All broadcasts for the player.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.GetAllBroadcasts">
            <summary>
                Gets all broadcasts.
            </summary>
            <returns>All broadcasts.</returns>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.RestartBroadcasts">
            <summary>
                Restarts broadcasts for all players.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.ClearAllBroadcasts">
            <summary>
                Clears all broadcasts.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.MultiBroadcast.ClearPlayerBroadcasts(Exiled.API.Features.Player)">
            <summary>
                Clears all broadcasts for a player.
            </summary>
            <param name="player">Player to clear broadcasts for.</param>
        </member>
        <member name="T:MultiBroadcast.API.BroadcastExtensions">
            <summary>
                Class that provides extension methods for player broadcasts.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.AddBroadcast(Exiled.API.Features.Player,System.UInt16,System.String,System.Byte,System.String)">
            <summary>
                Adds a broadcast to a player.
            </summary>
            <param name="player">Player to send the broadcast to.</param>
            <param name="duration">Broadcast duration.</param>
            <param name="message">Text of the broadcast.</param>
            <param name="priority">Priority of the broadcast.</param>
            <param name="tag">Tag of the broadcast.</param>
            <returns>The broadcast that was added.</returns>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.HasBroadcast(Exiled.API.Features.Player,System.String)">
            <summary>
                Checks if a player has a broadcast with the specified tag.
            </summary>
            <param name="player">Player to check broadcasts for.</param>
            <param name="tag">Tag of the broadcast.</param>
            <returns>True if the player has a broadcast with the specified tag; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.EditBroadcast(Exiled.API.Features.Player,System.String,System.String)">
            <summary>
                Edits a broadcast.
            </summary>
            <param name="player">Player to edit the broadcast for.</param>
            <param name="text">New text for the broadcast.</param>
            <param name="tag">Tag of the broadcast to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.EditBroadcast(Exiled.API.Features.Player,System.String,System.UInt16,MultiBroadcast.API.Broadcast[]@,System.String)">
            <summary>
                Edits a broadcast with a new duration.
            </summary>
            <param name="player">Player to edit the broadcast for.</param>
            <param name="text">New text for the broadcast.</param>
            <param name="duration">New duration for the broadcast.</param>
            <param name="newBroadcasts">New reference of the Broadcast that was edited.</param>
            <param name="tag">Tag of the broadcast to edit.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.RemoveBroadcast(Exiled.API.Features.Player,System.String)">
            <summary>
              Sets the priority of a broadcast.
            </summary>
            <param name="player">Player to set the priority for.</param>
            <param name="tag">Tag of the broadcast to set the priority for.</param>
            <returns>True if the broadcast priority was successfully set; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.ClearPlayerBroadcasts(Exiled.API.Features.Player)">
            <summary>
                Clears all broadcasts for a player.
            </summary>
            <param name="player">Player to clear broadcasts for.</param>
        </member>
        <member name="M:MultiBroadcast.API.BroadcastExtensions.GetBroadcasts(Exiled.API.Features.Player)">
            <summary>
                Gets all broadcasts for a player.
            </summary>
            <param name="player">Player to get broadcasts for.</param>
            <returns>All broadcasts of the specified player.</returns>
        </member>
        <member name="T:MultiBroadcast.API.PlayerBroadcastExtensions">
            <summary>
                Class that provides extension methods for player broadcasts.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.PlayerBroadcastExtensions.Edit(MultiBroadcast.API.Broadcast,System.String)">
            <summary>
                Edits a broadcast.
            </summary>
            <param name="broadcast">The broadcast to edit.</param>
            <param name="text">New text for the broadcast.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.PlayerBroadcastExtensions.Edit(MultiBroadcast.API.Broadcast,System.String,MultiBroadcast.API.Broadcast[]@,System.UInt16)">
            <summary>
                Edits a broadcast with a new duration.
            </summary>
            <param name="broadcast">The broadcast to edit.</param>
            <param name="text">New text for the broadcast.</param>
            <param name="newBroadcasts">New reference of the Broadcast that was edited.</param>
            <param name="duration">New duration for the broadcast.</param>
            <returns>True if the broadcast was successfully edited; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.PlayerBroadcastExtensions.Remove(MultiBroadcast.API.Broadcast)">
            <summary>
                Removes a broadcast.
            </summary>
            <param name="broadcast">The broadcast to remove.</param>
            <returns>True if the broadcast was successfully removed; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.PlayerBroadcastExtensions.SetPriority(MultiBroadcast.API.Broadcast,System.Byte)">
            <summary>
                Sets the priority of a broadcast.
            </summary>
            <param name="broadcast">The broadcast to set the priority for.</param>
            <param name="priority">Priority to set.</param>
            <returns>True if the broadcast priority was successfully set; otherwise, false.</returns>
        </member>
        <member name="M:MultiBroadcast.API.PlayerBroadcastExtensions.SetTag(MultiBroadcast.API.Broadcast,System.String)">
            <summary>
                Sets the tag of the broadcast.
            </summary>
            <param name="broadcast">The broadcast to set the tag for.</param>
            <param name="tag">Tag to set.</param>
            <returns>True if the broadcast tag was successfully set; otherwise, false.</returns>
        </member>
        <member name="T:MultiBroadcast.API.Broadcast">
            <summary>
            Represents a broadcast that is sent to a player.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Player">
            <summary>
            Gets the player to whom the broadcast is sent.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Text">
            <summary>
            Gets or sets the text of the broadcast.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Id">
            <summary>
            Gets the ID of the broadcast.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Duration">
            <summary>
            Gets the duration of the broadcast.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Priority">
            <summary>
            Gets or sets the priority of the broadcast.
            </summary>
        </member>
        <member name="P:MultiBroadcast.API.Broadcast.Tag">
            <summary>
            Gets or sets the tag of the broadcast.
            </summary>
        </member>
        <member name="M:MultiBroadcast.API.Broadcast.#ctor(Exiled.API.Features.Player,System.String,System.Int32,System.Int32,System.Byte,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MultiBroadcast.API.Broadcast"/> class.
            </summary>
            <param name="player">The player to whom the broadcast is sent.</param>
            <param name="text">The text of the broadcast.</param>
            <param name="id">The ID of the broadcast.</param>
            <param name="duration">The duration of the broadcast.</param>
            <param name="priority">The priority of the broadcast.</param>
            <param name="tag">The tag of the broadcast.</param>
        </member>
        <member name="T:MultiBroadcast.Commands.MultiBroadcastParentCommand">
            <summary>
                The base parent command.
            </summary>
        </member>
        <member name="M:MultiBroadcast.Commands.MultiBroadcastParentCommand.#ctor">
            <inheritdoc />
        </member>
        <member name="M:MultiBroadcast.Commands.MultiBroadcastParentCommand.LoadGeneratedCommands">
            <inheritdoc />
        </member>
        <member name="M:MultiBroadcast.Commands.MultiBroadcastParentCommand.ExecuteParent(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.MultiBroadcastParentCommand.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.MultiBroadcastParentCommand.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.MultiBroadcastParentCommand.Description">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.Subcommands.Add">
            <inheritdoc />
        </member>
        <member name="M:MultiBroadcast.Commands.Subcommands.Add.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Add.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Add.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Add.Description">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Add.SanitizeResponse">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.Subcommands.Edit">
            <summary>
                The edit command.
            </summary>
        </member>
        <member name="M:MultiBroadcast.Commands.Subcommands.Edit.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Edit.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Edit.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Edit.Description">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Edit.SanitizeResponse">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.Subcommands.List">
            <summary>
                The list command.
            </summary>
        </member>
        <member name="M:MultiBroadcast.Commands.Subcommands.List.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.List.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.List.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.List.Description">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.List.SanitizeResponse">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.Subcommands.Remove">
            <summary>
                The remove command.
            </summary>
        </member>
        <member name="M:MultiBroadcast.Commands.Subcommands.Remove.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Remove.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Remove.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Remove.Description">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.Remove.SanitizeResponse">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.Subcommands.SetPriority">
            <inheritdoc />
        </member>
        <member name="M:MultiBroadcast.Commands.Subcommands.SetPriority.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@)">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.SetPriority.Command">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.SetPriority.Aliases">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.SetPriority.Description">
            <inheritdoc />
        </member>
        <member name="P:MultiBroadcast.Commands.Subcommands.SetPriority.SanitizeResponse">
            <inheritdoc />
        </member>
        <member name="T:MultiBroadcast.Commands.CommandUtilities">
            <summary>
                Command utilities.
            </summary>
        </member>
        <member name="M:MultiBroadcast.Commands.CommandUtilities.GetIntArguments(System.String,System.Int32[]@)">
            <summary>
               Get the integer arguments from a string.
            </summary>
            <param name="text">The text to parse.</param>
            <param name="args">The integer arguments.</param>
            <returns>The integer arguments.</returns>
        </member>
        <member name="M:MultiBroadcast.Commands.CommandUtilities.GetStringFromArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
               Get the string from an array.
            </summary>
            <param name="array">The array to parse.</param>
            <typeparam name="T">The type of the array.</typeparam>
            <returns>The string from the array.</returns>
        </member>
    </members>
</doc>
